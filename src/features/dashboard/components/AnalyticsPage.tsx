import React, { useMemo } from 'react';
import { ProjectRecordInterface } from '@core/models/ProjectRecord';
import { sortPeriodsSimple, isValidPeriod, getLastPeriod } from '@shared/utils/periodUtils';
import { useWeeklyChartData } from '@features/dashboard/hooks/useChartData';
import { ChartOptions } from 'chart.js';
import { useDashboardStore } from '@shared/store/useDashboardStore';

import { useExcelData } from '@features/dashboard/hooks/useExcelData';

import Loading from './Loading';
import ErrorMessage from './Error';
import ErrorBoundary from './ErrorBoundary';
import Chart from './Chart';
import TrendChart from './TrendChart';
import PeriodComparison from './PeriodComparison';
import ForecastPanel from './ForecastPanel';
import MetricsCard from './MetricsCard';
import FiltersPanel from './FiltersPanel';

function AnalyticsPage() {
  const { data, isLoading, error } = useExcelData();
  const { selectedProject, selectedPeriod } = useDashboardStore();

  const periods = useMemo(() => {
    const allPeriods = [...new Set(data?.data.map((r: ProjectRecordInterface) => r.period) || [])];
    const validPeriods = allPeriods.filter(isValidPeriod);
    return sortPeriodsSimple(validPeriods);
  }, [data]);

  const lastPeriod = getLastPeriod(periods);

  // –î–∞–Ω–Ω—ã–µ –¥–ª—è –≥—Ä–∞—Ñ–∏–∫–æ–≤
  const weeklyChartData = useWeeklyChartData(data?.data || [], selectedProject, selectedPeriod);

  // –û–ø—Ä–µ–¥–µ–ª—è–µ–º, –∫–∞–∫–æ–π —Ç–∏–ø –≥—Ä–∞—Ñ–∏–∫–∞ –ø–æ–∫–∞–∑—ã–≤–∞—Ç—å
  const shouldShowWeeklyChart = selectedProject && selectedPeriod;

  // –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –¥–ª—è –≥—Ä–∞—Ñ–∏–∫–æ–≤
  const stats = useMemo(() => {
    const filteredData = data?.data.filter(record => {
      const matchProject = selectedProject && selectedProject.trim() !== '' ? record.project === selectedProject : true;
      const matchPeriod = selectedPeriod && selectedPeriod.trim() !== '' ? record.period === selectedPeriod : true;
      return matchProject && matchPeriod;
    }) || [];

    const totalViews = filteredData.reduce((sum, record) => sum + record.views, 0);
    const totalSI = filteredData.reduce((sum, record) => sum + record.si, 0);
    const avgER = totalViews > 0 ? ((totalSI / totalViews) * 100).toFixed(1) : '0.0';

    return { totalViews, totalSI, avgER, recordCount: filteredData.length };
  }, [data, selectedProject, selectedPeriod]);

  if (isLoading) return <Loading />;
  if (error) return <ErrorMessage message={error instanceof Error ? error.message : '–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –¥–∞–Ω–Ω—ã–µ.'} />;

  const chartOptions: ChartOptions<'line'> = {
    responsive: true,
    maintainAspectRatio: false,
    plugins: {
      legend: {
        display: false
      }
    },
    scales: {
      y: { 
        beginAtZero: true, 
        title: { display: true, text: '–ó–Ω–∞—á–µ–Ω–∏–µ', color: '#FFFFFF' } 
      },
      y1: {
        type: 'linear',
        display: true,
        position: 'right',
        grid: {
          drawOnChartArea: false,
        },
      },
      x: { 
        title: { display: true, text: '–ü–µ—Ä–∏–æ–¥—ã', color: '#FFFFFF' } 
      },
    },
  };

  return (
    <ErrorBoundary>
      <div className="p-4 pb-20">
        <FiltersPanel />
        
        {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ */}
        <div className="text-center mb-6">
          <h1 className="text-2xl font-bold text-gray-900 dark:text-white">–ê–Ω–∞–ª–∏—Ç–∏–∫–∞</h1>
          <p className="text-sm text-gray-600 dark:text-gray-400 mt-1">
            –ì—Ä–∞—Ñ–∏–∫–∏, —Ç—Ä–µ–Ω–¥—ã –∏ –ø—Ä–æ–≥–Ω–æ–∑—ã
          </p>
        </div>

        {/* –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ */}
        <div className="bg-white dark:bg-gray-800 rounded-xl shadow-sm p-4 mb-4">
          <h3 className="text-lg font-semibold mb-3 text-gray-900 dark:text-white">–û–±—â–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞</h3>
          <div className="grid grid-cols-3 gap-4 text-center">
            <div>
              <p className="text-2xl font-bold text-blue-600 dark:text-blue-400">{stats.totalViews.toLocaleString()}</p>
              <p className="text-xs text-gray-500 dark:text-gray-400">–ü—Ä–æ—Å–º–æ—Ç—Ä—ã</p>
            </div>
            <div>
              <p className="text-2xl font-bold text-green-600 dark:text-green-400">{stats.totalSI.toLocaleString()}</p>
              <p className="text-xs text-gray-500 dark:text-gray-400">–°–ò</p>
            </div>
            <div>
              <p className="text-2xl font-bold text-purple-600 dark:text-purple-400">{stats.recordCount}</p>
              <p className="text-xs text-gray-500 dark:text-gray-400">–ó–∞–ø–∏—Å–µ–π</p>
            </div>
          </div>
        </div>
        
        {/* –ì—Ä–∞—Ñ–∏–∫ –ø–æ –¥–Ω—è–º –Ω–µ–¥–µ–ª–∏ */}
        {shouldShowWeeklyChart && (
          <div className="bg-white dark:bg-gray-800 rounded-xl shadow-sm p-4 mb-6">
            <h3 className="text-lg font-semibold mb-3 text-gray-900 dark:text-white">
              –î–∏–Ω–∞–º–∏–∫–∞ –¥–ª—è {selectedProject}
            </h3>
            <p className="text-sm text-gray-600 dark:text-gray-400 mb-3">
              –ü–µ—Ä–∏–æ–¥: {selectedPeriod}
            </p>
            <div className="h-80">
              <Chart 
                type="line" 
                data={weeklyChartData} 
                options={chartOptions}
              />
            </div>
          </div>
        )}

        {/* –°–µ–∫—Ü–∏—è —Ç—Ä–µ–Ω–¥–æ–≤ —Ä–æ—Å—Ç–∞ */}
        <div className="mb-6">
          <h3 className="text-lg font-semibold mb-4 text-gray-900 dark:text-white">
            üìà –¢—Ä–µ–Ω–¥—ã —Ä–æ—Å—Ç–∞ –ø—Ä–æ—Å–º–æ—Ç—Ä–æ–≤
          </h3>
          <TrendChart 
            data={data?.data || []} 
            selectedProject={selectedProject}
            periods={periods}
          />
        </div>

        {/* –°–µ–∫—Ü–∏—è —Å—Ä–∞–≤–Ω–µ–Ω–∏—è –ø–µ—Ä–∏–æ–¥–æ–≤ */}
        <div className="mb-6">
          <h3 className="text-lg font-semibold mb-4 text-gray-900 dark:text-white">
            üìä –°—Ä–∞–≤–Ω–µ–Ω–∏–µ –ø–µ—Ä–∏–æ–¥–æ–≤
          </h3>
          <PeriodComparison 
            data={data?.data || []} 
            periods={periods}
            lastPeriod={lastPeriod}
            selectedProject={selectedProject}
          />
        </div>

        {/* –°–µ–∫—Ü–∏—è –ø—Ä–æ–≥–Ω–æ–∑–∏—Ä–æ–≤–∞–Ω–∏—è */}
        <div className="mb-6">
          <h3 className="text-lg font-semibold mb-4 text-gray-900 dark:text-white">
            üîÆ –ü—Ä–æ–≥–Ω–æ–∑–∏—Ä–æ–≤–∞–Ω–∏–µ
          </h3>
          <ForecastPanel 
            data={data?.data || []} 
            periods={periods}
            selectedProject={selectedProject}
          />
        </div>

        {/* –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –º–µ—Ç—Ä–∏–∫–∏ */}
        <div className="mb-6">
          <h3 className="text-lg font-semibold mb-4 text-gray-900 dark:text-white">
            üìã –ö–ª—é—á–µ–≤—ã–µ –º–µ—Ç—Ä–∏–∫–∏
          </h3>
          <div className="grid grid-cols-2 gap-4">
            <MetricsCard 
              title="–°—Ä–µ–¥–Ω–∏–π —Ä–æ—Å—Ç"
              value="+12.5%"
              trend="up"
              description="–ó–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–µ 3 –ø–µ—Ä–∏–æ–¥–∞"
              className="bg-green-50 dark:bg-green-900/20"
            />
            <MetricsCard 
              title="–°—Ç–∞–±–∏–ª—å–Ω–æ—Å—Ç—å"
              value="85%"
              trend="stable"
              description="–ö–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç –≤–∞—Ä–∏–∞—Ü–∏–∏"
              className="bg-blue-50 dark:bg-blue-900/20"
            />
            <MetricsCard 
              title="–ü—Ä–æ–≥–Ω–æ–∑ —Ç–æ—á–Ω–æ—Å—Ç–∏"
              value="92%"
              trend="up"
              description="R¬≤ –∫–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç"
              className="bg-purple-50 dark:bg-purple-900/20"
            />
            <MetricsCard 
              title="–ê–Ω–æ–º–∞–ª–∏–∏"
              value="2"
              trend="down"
              description="–ó–∞ —Ç–µ–∫—É—â–∏–π –ø–µ—Ä–∏–æ–¥"
              className="bg-orange-50 dark:bg-orange-900/20"
            />
          </div>
        </div>
      </div>
    </ErrorBoundary>
  );
}

export default AnalyticsPage; 